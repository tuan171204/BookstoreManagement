@model IEnumerable<BookstoreManagement.ViewModels.Promotion.PromotionViewModel>

@{
    ViewData["Title"] = "Quản lý Khuyến mãi";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2><i class="bi bi-gift"></i> Quản lý Khuyến mãi</h2>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Thêm chương trình mới
                </a>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Search and Filter -->
    <div class="card mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-8">
                    <label class="form-label">Tìm kiếm</label>
                    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" 
                           class="form-control" placeholder="Tên chương trình, loại khuyến mãi..." />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Trạng thái</label>
                    <select name="isActive" class="form-select">
                        <option value="">-- Tất cả --</option>
                        <option value="true" selected="@(ViewData["IsActive"]?.ToString() == "True")">Hoạt động</option>
                        <option value="false" selected="@(ViewData["IsActive"]?.ToString() == "False")">Không hoạt động</option>
                    </select>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-search"></i> Tìm
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Promotions Table -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Tên chương trình</th>
                            <th>Loại</th>
                            <th>Giảm giá</th>
                            <th>Thời gian</th>
                            <th>Số sách</th>
                            <th>Trạng thái</th>
                            <th class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@item.Name</strong>
                                        @if (item.MinPurchaseAmount.HasValue)
                                        {
                                            <br /><small class="text-muted">Min: @item.MinPurchaseAmount.Value.ToString("N0")₫</small>
                                        }
                                    </td>
                                    <td>@item.TypeName</td>
                                    <td>
                                        @if (item.DiscountPercent.HasValue)
                                        {
                                            <span class="badge bg-success">@item.DiscountPercent%</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        <small>
                                            @item.StartDate?.ToString("dd/MM/yyyy")<br />
                                            → @item.EndDate?.ToString("dd/MM/yyyy")
                                        </small>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@item.AppliedBooksCount</span>
                                    </td>
                                    <td>
                                        <span class="badge @item.StatusBadgeClass">
                                            @item.Status
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm">
                                            <a asp-action="Details" asp-route-id="@item.PromotionId" 
                                               class="btn btn-info" title="Chi tiết">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.PromotionId" 
                                               class="btn btn-warning" title="Sửa">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn @(item.IsActive == true ? "btn-secondary" : "btn-success")" 
                                                    title="@(item.IsActive == true ? "Vô hiệu hóa" : "Kích hoạt")"
                                                    onclick="toggleActive(@item.PromotionId)">
                                                <i class="bi bi-power"></i>
                                            </button>
                                            <button type="button" class="btn btn-danger" title="Xóa"
                                                    onclick="showDeleteModal(@item.PromotionId, '@Url.Action("Delete", "Promotion")', '@item.Name')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-4">
                                    <i class="bi bi-inbox" style="font-size: 3rem; color: #ccc;"></i>
                                    <p class="mt-2 text-muted">Không tìm thấy chương trình khuyến mãi nào</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @await Html.PartialAsync("_Pagination")
        </div>
    </div>
</div>

<!-- Delete Modal -->
@await Html.PartialAsync("_DeleteModal")

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <form id="deleteForm">
        @Html.AntiForgeryToken()
    </form>
    
    <script>
        function toggleActive(promotionId) {
            if (confirm('Bạn có chắc chắn muốn thay đổi trạng thái?')) {
                const formData = new FormData();
                formData.append('id', promotionId);
                
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                fetch('@Url.Action("ToggleActive", "Promotion")', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra.');
                });
            }
        }
    </script>
}